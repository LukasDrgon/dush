{"version":3,"file":"dush.umd.js","sources":["../src/index.js"],"sourcesContent":["/*!\n * dush <https://github.com/tunnckoCore/dush>\n *\n * Copyright (c) Charlike Mike Reagent <@tunnckoCore> (https://i.am.charlike.online)\n * Released under the MIT license.\n */\n\nfunction dush () {\n  const all = Object.create(null)\n  const app = {\n    all,\n\n    on (name, handler) {\n      let e = all[name] || (all[name] = [])\n      e.push(handler)\n\n      return app\n    },\n\n    once (name, handler) {\n      function fn (a, b, c) {\n        app.off(name, fn)\n        handler(a, b, c)\n      }\n\n      return app.on(name, fn)\n    },\n\n    off (name, handler) {\n      if (handler && all[name]) {\n        all[name].splice(all[name].indexOf(handler) >>> 0, 1)\n      } else {\n        all[name] = []\n      }\n\n      return app\n    },\n\n    emit (name, a, b, c) {\n      (all[name] || []).map((handler) => { handler(a, b, c) });\n      (all['*'] || []).map((handler) => { handler(name, a, b, c) })\n\n      return app\n    }\n  }\n\n  return app\n}\n\nexport default dush\n"],"names":["dush","const","all","Object","create","app","on","name","handler","let","e","push","once","fn","a","b","c","off","splice","indexOf","emit","map"],"mappings":"mKAOA,QAASA,KACPC,GAAMC,GAAMC,OAAOC,OAAO,MACpBC,GACJH,IAAAA,EAEAI,YAAIC,EAAMC,GACRC,GAAIC,GAAIR,EAAIK,KAAUL,EAAIK,MAG1B,OAFAG,GAAEC,KAAKH,GAEAH,GAGTO,cAAML,EAAMC,GACV,QAASK,GAAIC,EAAGC,EAAGC,GACjBX,EAAIY,IAAIV,EAAMM,GACdL,EAAQM,EAAGC,EAAGC,GAGhB,MAAOX,GAAIC,GAAGC,EAAMM,IAGtBI,aAAKV,EAAMC,GAOT,MANIA,IAAWN,EAAIK,GACjBL,EAAIK,GAAMW,OAAOhB,EAAIK,GAAMY,QAAQX,KAAa,EAAG,GAEnDN,EAAIK,MAGCF,GAGTe,cAAMb,EAAMO,EAAGC,EAAGC,GAIhB,OAHCd,EAAIK,QAAac,IAAI,SAACb,GAAcA,EAAQM,EAAGC,EAAGC,MAClDd,EAAI,UAAYmB,IAAI,SAACb,GAAcA,EAAQD,EAAMO,EAAGC,EAAGC,KAEjDX,GAIX,OAAOA"}